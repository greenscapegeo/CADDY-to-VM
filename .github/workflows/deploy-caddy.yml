  name: deploy-caddy

  on:
    push:
      branches: [ master ]
    workflow_dispatch: {}

  env:
    VM_HOST:     ${{ secrets.VM_HOST }}
    VM_SSH_USER: ${{ secrets.VM_SSH_USER }}
    VM_PATH:     "/home/greenscapegeo/caddy"

  jobs:
    deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Copy Caddy files
          uses: appleboy/scp-action@v0.1.7
          with:
            host: ${{ secrets.VM_HOST }}
            username: ${{ secrets.VM_SSH_USER }}
            key: ${{ secrets.VM_SSH_KEY }}
            source: "caddy/"
            target: "~/caddy"
            overwrite: true
            strip_components: 1

        - name: Deploy Caddy
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.VM_HOST }}
            username: ${{ secrets.VM_SSH_USER }}
            key: ${{ secrets.VM_SSH_KEY }}
            script: |
              set -euo pipefail
              cd ~/caddy

              # Ensure network exists
              docker network create web 2>/dev/null || true

              # Stop and remove existing Caddy
              docker compose down caddy 2>/dev/null || true

              # Start new Caddy
              docker compose up -d caddy

              # Wait and test
              sleep 5
              curl -f http://localhost/health || echo "Health check failed"

              echo "âœ… Caddy deployment completed"

# # .github/workflows/deploy-caddy.yml  (infra repo)
# name: deploy-caddy
# on:
#   push:
#     paths:
#       - "infra/caddy/**"
#     branches: [ master ]
#   workflow_dispatch: {}

# env:
#   VM_HOST:     ${{ secrets.VM_HOST }}        # 35.225.153.97
#   VM_SSH_USER: ${{ secrets.VM_SSH_USER }}    # borissolomonia
#   VM_PATH:     "/home/borissolomonia/caddy"

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Copy Caddy files
#         uses: appleboy/scp-action@v0.1.7
#         with:
#           host: ${{ secrets.VM_HOST }}
#           username: ${{ secrets.VM_SSH_USER }}
#           key: ${{ secrets.VM_SSH_KEY }}
#           source: "caddy/*"
#           target: "~/caddy"
#           overwrite: true
#           strip_components: 2

#       - name: Bring up & reload
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.VM_HOST }}
#           username: ${{ secrets.VM_SSH_USER }}
#           key: ${{ secrets.VM_SSH_KEY }}
#           script: |
#             set -euo pipefail
#             docker network create web 2>/dev/null || true
#             cd "/home/borissolomonia/caddy"
#             docker compose up -d
#             docker compose exec caddy caddy reload --config /etc/caddy/Caddyfile || true
#             curl -fsS http://127.0.0.1/health




# # name: deploy-caddy
# # on:
# #   push:
# #     paths:
# #       - 'infra/caddy/**'
# #     branches: [ master ]
# #   workflow_dispatch: {}

# # env:
# #   VM_HOST:     ${{ vars.VM_HOST }}       # 35.225.153.97
# #   VM_SSH_USER: ${{ vars.VM_SSH_USER }}   # e.g. borissolomonia

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v4

# #       - name: Copy caddy files
# #         uses: appleboy/scp-action@v0.1.7
# #         with:
# #           host: ${{ secrets.VM_HOST }}
# #           username: ${{ secrets.VM_SSH_USER }}
# #           key: ${{ secrets.VM_SSH_KEY }}
# #           source: "caddy/*"
# #           target: "~/caddy"
# #           overwrite: true
# #           strip_components: 1

# #       - name: Bring up Caddy and reload
# #         uses: appleboy/ssh-action@v1.0.3
# #         with:
# #           host: ${{ secrets.VM_HOST }}
# #           username: ${{ secrets.VM_SSH_USER }}
# #           key: ${{ secrets.VM_SSH_KEY }}
# #           script: |
# #             set -euo pipefail
# #             sudo docker network create web 2>/dev/null || true
# #             cd ~/caddy
# #             sudo docker compose up -d
# #             # wait for caddy to start
# #             sleep 5
# #             # if already running, just reload config
# #             sudo docker compose exec caddy caddy reload --config /etc/caddy/Caddyfile || true
# #             # test health endpoint
# #             curl -fsS http://127.0.0.1/health || echo "Health check failed, but deployment completed"
